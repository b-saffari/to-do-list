{"version":3,"sources":["components/addTodo.jsx","components/todo.jsx","components/todoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["AddTodo","addTopHandler","addBottomHandler","useState","todoTitle","setTodoTitle","className","type","value","onChange","event","target","id","placeholder","onClick","title","isCompleted","Todo","todo","deleteHandler","TodoList","todoList","setTodoList","todos","index","findIndex","sort","x","y","map","t","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA2CeA,EAzCC,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,iBAAsB,EACjBC,mBAAS,IADQ,mBAC5CC,EAD4C,KACjCC,EADiC,KA0BnD,OACI,mCACA,gCACI,uBAAOC,UAAU,aAAjB,sBACA,uBAAOC,KAAK,MAAOC,MAAOJ,EACrBK,SA5Ba,SAACC,GACvBL,EAAaK,EAAMC,OAAOH,QA4BhBF,UAAU,eAAeM,GAAG,YAC3BC,YAAY,+BACnB,wBAAQN,KAAK,SAASD,UAAU,kBAAkBQ,QA3B3C,WAKPb,EAJa,CACTc,MAAOX,EACPY,aAAa,IAGjBX,EAAa,KAqBb,wBACA,wBAAQE,KAAK,SAASD,UAAU,oBAAoBQ,QAnB1C,WAKVZ,EAJa,CACTa,MAAOX,EACPY,aAAa,IAGjBX,EAAa,KAab,iCC1BGY,EATF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,cACjB,OACI,gCACI,oBAAIb,UAAWY,EAAKF,YAAc,gBAAkB,kBAApD,SAAwEE,EAAKH,QAC7E,wBAAQR,KAAK,SAASD,UAAU,kBAAkBQ,QAAS,kBAAIK,EAAcD,EAAKH,QAAlF,2BC4BGK,EA9BE,WAAO,IAAD,EACajB,mBAAS,IADtB,mBACZkB,EADY,KACFC,EADE,KAUbH,EAAgB,SAACJ,GACnB,IAAMQ,EAAK,YAAOF,GACZG,EAAQD,EAAME,WAAU,SAAAP,GAAI,OAAIA,EAAKH,QAAUA,KACrDQ,EAAMC,GAAOR,aAAc,EAE3BO,EAAMG,MAAK,SAASC,EAAGC,GACnB,OAAQD,EAAEX,cAAgBY,EAAEZ,YAAc,EAAIW,EAAEX,YAAa,GAAK,KAGtEM,EAAYC,IAGhB,OACI,qCACI,cAAC,EAAD,CAAStB,cArBK,SAACiB,GAChBI,EAAY,CAACJ,GAAF,mBAAWG,MAoBkBnB,iBAjBtB,SAACgB,GACjBI,EAAY,GAAD,mBAAKD,GAAL,CAAeH,QAiB1BG,EAASQ,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAoBZ,KAAMY,EAAGX,cAAeA,GAAjCW,EAAEf,c,MCjB7BgB,MARf,WACE,OACE,qBAAKzB,UAAU,YAAf,SACE,cAAC,EAAD,OCKS0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7c5c1adc.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst AddTodo = ({addTopHandler, addBottomHandler}) => {\r\n    const [todoTitle, setTodoTitle] = useState(\"\");\r\n\r\n    const handleInputChange = (event) => {\r\n        setTodoTitle(event.target.value);\r\n    };\r\n\r\n    const addTop = () => {\r\n            const task = {\r\n                title: todoTitle,\r\n                isCompleted: false\r\n            }\r\n            addTopHandler(task)\r\n            setTodoTitle(\"\")\r\n    }\r\n\r\n    const addBottom = () => {\r\n            const task = {\r\n                title: todoTitle,\r\n                isCompleted: false\r\n            }\r\n            addBottomHandler(task)\r\n            setTodoTitle(\"\")\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div>\r\n            <label className=\"form-label\">New Task</label>\r\n            <input type=\"txt\"  value={todoTitle}\r\n                 onChange={handleInputChange}\r\n                  className=\"form-control\" id=\"inputTask\"\r\n                   placeholder=\"Enter your task title here\"/>\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={addTop}>Add to Top</button>\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={addBottom}>Add to Bottom</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddTodo","import React from 'react'\r\n\r\nconst Todo = ({todo, deleteHandler}) => {\r\n    return (\r\n        <div>\r\n            <h1 className={todo.isCompleted ? 'completedTask' : 'unCompletedTask'}>{todo.title}</h1>\r\n            <button type=\"button\" className=\"btn btn-success\" onClick={()=>deleteHandler(todo.title)}>Completed</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo","import React, { useState } from \"react\";\r\nimport AddTodo from \"./addTodo\";\r\nimport Todo from \"./todo\";\r\n\r\nconst TodoList = () => {\r\n    const [todoList, setTodoList] = useState([]);\r\n    \r\n    const addTopHandler = (todo) => {\r\n           setTodoList([todo, ...todoList])\r\n    }\r\n\r\n    const addBottomHandler = (todo) => {\r\n             setTodoList([...todoList ,todo])\r\n    }\r\n    const deleteHandler = (title) => {\r\n        const todos = [...todoList];\r\n        const index = todos.findIndex(todo => todo.title === title)\r\n        todos[index].isCompleted = true\r\n\r\n        todos.sort(function(x, y) {\r\n            return (x.isCompleted === y.isCompleted)? 0 : x.isCompleted? 1 : -1;\r\n        })\r\n\r\n        setTodoList(todos)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AddTodo addTopHandler={addTopHandler} addBottomHandler={addBottomHandler} />\r\n            {todoList.map(t => <Todo key={t.title} todo={t} deleteHandler={deleteHandler}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TodoList","import './App.css';\nimport TodoList from './components/todoList'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}